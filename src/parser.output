Grammar

    0 $accept: program "end of file"

    1 program: unit

    2 unit: unit type
    3     | unit functor_decl
    4     | unit relation_decl
    5     | unit lattice_decl
    6     | unit lattice_asscoiation
    7     | unit lattice_unary_def
    8     | unit lattice_binary_def
    9     | unit load_head
   10     | unit store_head
   11     | unit fact
   12     | unit rule
   13     | unit component
   14     | unit comp_init
   15     | unit pragma
   16     | %empty

   17 pragma: "pragma directive" "symbol" "symbol"
   18       | "pragma directive" "symbol"

   19 type_id: "identifier"
   20        | type_id "." "identifier"

   21 type: "numeric type declaration" "identifier"
   22     | "symbolic type declaration" "identifier"
   23     | "type declaration" "identifier"
   24     | "type declaration" "identifier" "=" uniontype
   25     | "type declaration" "identifier" "=" "[" recordtype "]"
   26     | "type declaration" "identifier" "=" "[" "]"
   27     | "enum declaration" "identifier" "=" "{" enumtype "}"

   28 recordtype: "identifier" ":" type_id
   29           | recordtype "," "identifier" ":" type_id

   30 uniontype: type_id
   31          | uniontype "|" type_id

   32 enumtype: "case" "symbol"
   33         | "case" "numeric type declaration"
   34         | enumtype "," "case" "symbol"
   35         | enumtype "," "case" "numeric type declaration"

   36 rel_id: "identifier"
   37       | rel_id "." "identifier"

   38 non_empty_attributes: "identifier" ":" type_id
   39                     | attributes "," "identifier" ":" type_id

   40 attributes: non_empty_attributes
   41           | %empty

   42 qualifiers: qualifiers "relation qualifier output"
   43           | qualifiers "relation qualifier input"
   44           | qualifiers "relation qualifier printsize"
   45           | qualifiers "relation qualifier overidable"
   46           | qualifiers "relation qualifier inline"
   47           | qualifiers "BRIE datastructure qualifier"
   48           | qualifiers "BTREE datastructure qualifier"
   49           | qualifiers "equivalence relation qualifier"
   50           | %empty

   51 functor_decl: "functor declaration" "identifier" "(" functor_typeargs ")" ":" functor_type
   52             | "functor declaration" "identifier" "(" ")" ":" functor_type

   53 functor_type: "identifier"

   54 functor_typeargs: functor_type "," functor_typeargs
   55                 | functor_type

   56 relation_decl: "relation declaration" relation_list

   57 relation_list: relation_body
   58              | "identifier" "," relation_list

   59 relation_body: "identifier" "(" attributes ")" qualifiers

   60 lattice_decl: "lattice declaration" relation_list

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "symbol" "," "symbol" "," "identifier" "," "identifier" ")"

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_unary_def_type "}"

   63 lattice_unary_def_type: "case" "(" arg ")" "=>" arg
   64                       | lattice_unary_def_type "," "case" "(" arg ")" "=>" arg

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

   66 lattice_binary_def_type: "case" "(" arg "," arg ")" "=>" arg
   67                        | lattice_binary_def_type "," "case" "(" arg "," arg ")" "=>" arg

   68 non_empty_key_value_pairs: "identifier" "=" "symbol"
   69                          | key_value_pairs "," "identifier" "=" "symbol"
   70                          | "identifier" "=" "identifier"
   71                          | key_value_pairs "," "identifier" "=" "identifier"
   72                          | "identifier" "=" "true literal constraint"
   73                          | key_value_pairs "," "identifier" "=" "true literal constraint"
   74                          | "identifier" "=" "false literal constraint"
   75                          | key_value_pairs "," "identifier" "=" "false literal constraint"

   76 key_value_pairs: non_empty_key_value_pairs
   77                | %empty

   78 load_head: "input directives declaration" iodirective_list

   79 store_head: "output directives declaration" iodirective_list
   80           | "printsize directives declaration" iodirective_list

   81 iodirective_list: iodirective_body
   82                 | "identifier" "," iodirective_list

   83 iodirective_body: rel_id "(" key_value_pairs ")"
   84                 | rel_id

   85 arg: "symbol"
   86    | "_"
   87    | "$"
   88    | "@" "identifier" functor_list
   89    | "&" "identifier" "(" arg ")"
   90    | "&" "identifier" "(" arg "," arg ")"
   91    | "identifier"
   92    | "number"
   93    | "(" arg ")"
   94    | condition "?" arg ":" arg
   95    | arg "bor" arg
   96    | arg "bxor" arg
   97    | arg "band" arg
   98    | arg "lor" arg
   99    | arg "land" arg
  100    | arg "+" arg
  101    | arg "-" arg
  102    | arg "*" arg
  103    | arg "/" arg
  104    | arg "%" arg
  105    | arg "^" arg
  106    | "max aggregator" "(" arg "," arg ")"
  107    | "min aggregator" "(" arg "," arg ")"
  108    | "concatenation of two strings" "(" arg "," arg ")"
  109    | "ordinal number of a string" "(" arg ")"
  110    | "length of a string" "(" arg ")"
  111    | "convert string to number" "(" arg ")"
  112    | "convert number to string" "(" arg ")"
  113    | "sub-string of a string" "(" arg "," arg "," arg ")"
  114    | arg "type cast" "identifier"
  115    | "-" arg
  116    | "bnot" arg
  117    | "lnot" arg
  118    | "[" "]"
  119    | "[" recordlist "]"
  120    | "nil reference"
  121    | "count aggregator" ":" atom
  122    | "count aggregator" ":" "{" body "}"
  123    | "sum aggregator" arg ":" atom
  124    | "sum aggregator" arg ":" "{" body "}"
  125    | "min aggregator" arg ":" atom
  126    | "min aggregator" arg ":" "{" body "}"
  127    | "max aggregator" arg ":" atom
  128    | "max aggregator" arg ":" "{" body "}"
  129    | "reserved keyword" "(" arg ")"

  130 condition: arg "=" arg
  131          | arg "!" "=" arg
  132          | arg "<" arg
  133          | arg "<" "=" arg
  134          | arg ">" arg
  135          | arg ">" "=" arg

  136 functor_list: "(" ")"
  137             | "(" functor_args ")"

  138 functor_args: arg
  139             | functor_args "," arg

  140 recordlist: arg
  141           | recordlist "," arg

  142 non_empty_arg_list: arg
  143                   | arg_list "," arg

  144 arg_list: non_empty_arg_list
  145         | %empty

  146 atom: rel_id "(" arg_list ")"

  147 literal: arg "relational operator" arg
  148        | arg "<" arg
  149        | arg ">" arg
  150        | arg "=" arg
  151        | atom
  152        | "match predicate" "(" arg "," arg ")"
  153        | "checks whether substring is contained in a string" "(" arg "," arg ")"
  154        | "true literal constraint"
  155        | "false literal constraint"

  156 fact: atom "."

  157 head: atom
  158     | head "," atom

  159 term: literal
  160     | "!" term
  161     | "(" disjunction ")"

  162 conjunction: term
  163            | conjunction "," term

  164 disjunction: conjunction
  165            | disjunction ";" conjunction

  166 body: disjunction

  167 exec_order_list: "number"
  168                | exec_order_list "," "number"

  169 exec_order: "(" exec_order_list ")"

  170 exec_plan_list: "number" ":" exec_order
  171               | exec_plan_list "," "number" ":" exec_order

  172 exec_plan: "plan keyword" exec_plan_list

  173 rule_def: head ":-" body "."

  174 rule: rule_def
  175     | rule "strict marker"
  176     | rule exec_plan

  177 type_param_list: "identifier"
  178                | type_param_list "," type_id

  179 type_params: %empty
  180            | "<" type_param_list ">"

  181 comp_type: "identifier" type_params

  182 component_head: "component declaration" comp_type
  183               | component_head ":" comp_type
  184               | component_head "," comp_type

  185 component_body: component_body type
  186               | component_body relation_decl
  187               | component_body load_head
  188               | component_body store_head
  189               | component_body fact
  190               | component_body rule
  191               | component_body comp_override
  192               | component_body component
  193               | component_body comp_init
  194               | %empty

  195 component: component_head "{" component_body "}"

  196 comp_init: "component instantiation" "identifier" "=" comp_type

  197 comp_override: "override rules of super-component" "identifier"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "reserved keyword" <std::string> (258) 129
    "symbol" <std::string> (259) 17 18 32 34 61 68 69 85
    "identifier" <std::string> (260) 19 20 21 22 23 24 25 26 27 28 29 36 37 38 39 51 52 53 58 59 61 62 65 68 69 70 71 72 73 74 75 82 88 89 90 91 114 177 181 196 197
    "number" <AstDomain> (261) 92 167 168 170 171
    "relational operator" <std::string> (262) 147
    "pragma directive" (263) 17 18
    "relation qualifier output" (264) 42
    "relation qualifier input" (265) 43
    "relation qualifier printsize" (266) 44
    "BRIE datastructure qualifier" (267) 47
    "BTREE datastructure qualifier" (268) 48
    "equivalence relation qualifier" (269) 49
    "relation qualifier overidable" (270) 45
    "relation qualifier inline" (271) 46
    "match predicate" (272) 152
    "checks whether substring is contained in a string" (273) 153
    "concatenation of two strings" (274) 108
    "ordinal number of a string" (275) 109
    "length of a string" (276) 110
    "sub-string of a string" (277) 113
    "min aggregator" (278) 107 125 126
    "max aggregator" (279) 106 127 128
    "count aggregator" (280) 121 122
    "sum aggregator" (281) 123 124
    "true literal constraint" (282) 72 73 154
    "false literal constraint" (283) 74 75 155
    "strict marker" (284) 175
    "plan keyword" (285) 172
    ":-" (286) 173
    "relation declaration" (287) 56
    "lattice declaration" (288) 60
    "lattice components type declaration" (289) 61
    "lattice binary function definition" (290) 62 65
    "functor declaration" (291) 51 52
    "input directives declaration" (292) 78
    "output directives declaration" (293) 79
    "printsize directives declaration" (294) 80
    "override rules of super-component" (295) 197
    "type declaration" (296) 23 24 25 26
    "enum declaration" (297) 27
    "component declaration" (298) 182
    "component instantiation" (299) 196
    "numeric type declaration" (300) 21 33 35
    "symbolic type declaration" (301) 22
    "convert string to number" (302) 111
    "convert number to string" (303) 112
    "type cast" (304) 114
    "nil reference" (305) 120
    "|" (306) 31
    "[" (307) 25 26 118 119
    "]" (308) 25 26 118 119
    "_" (309) 86
    "$" (310) 87
    "+" (311) 100
    "-" (312) 101 115
    "!" (313) 131 160
    "?" (314) 94
    "(" (315) 51 52 59 61 62 63 64 65 66 67 83 89 90 93 106 107 108 109 110 111 112 113 129 136 137 146 152 153 161 169
    ")" (316) 51 52 59 61 62 63 64 65 66 67 83 89 90 93 106 107 108 109 110 111 112 113 129 136 137 146 152 153 161 169
    "," (317) 29 34 35 39 54 58 61 64 65 66 67 69 71 73 75 82 90 106 107 108 113 139 141 143 152 153 158 163 168 171 178 184
    ":" (318) 28 29 38 39 51 52 62 65 94 121 122 123 124 125 126 127 128 170 171 183
    ";" (319) 165
    "." (320) 20 37 156 173
    "=>" (321) 63 64 66 67
    "=" (322) 24 25 26 27 61 68 69 70 71 72 73 74 75 130 131 133 135 150 196
    "*" (323) 102
    "@" (324) 88
    "&" (325) 89 90
    "/" (326) 103
    "^" (327) 105
    "%" (328) 104
    "{" (329) 27 62 65 122 124 126 128 195
    "}" (330) 27 62 65 122 124 126 128 195
    "<" (331) 61 132 133 148 180
    ">" (332) 61 134 135 149 180
    "band" (333) 97
    "bor" (334) 95
    "bxor" (335) 96
    "bnot" (336) 116
    "land" (337) 99
    "lor" (338) 98
    "lnot" (339) 117
    "case" (340) 32 33 34 35 63 64 66 67
    NEG (341)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    program (88)
        on left: 1
        on right: 0
    unit (89)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
        on right: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    pragma <AstPragma *> (90)
        on left: 17 18
        on right: 15
    type_id <AstTypeIdentifier *> (91)
        on left: 19 20
        on right: 20 28 29 30 31 38 39 178
    type <AstType *> (92)
        on left: 21 22 23 24 25 26 27
        on right: 2 185
    recordtype <AstRecordType *> (93)
        on left: 28 29
        on right: 25 29
    uniontype <AstUnionType *> (94)
        on left: 30 31
        on right: 24 31
    enumtype <AstEnumType *> (95)
        on left: 32 33 34 35
        on right: 27 34 35
    rel_id <AstRelationIdentifier *> (96)
        on left: 36 37
        on right: 37 83 84 146
    non_empty_attributes <AstRelation *> (97)
        on left: 38 39
        on right: 40
    attributes <AstRelation *> (98)
        on left: 40 41
        on right: 39 59
    qualifiers <uint32_t> (99)
        on left: 42 43 44 45 46 47 48 49 50
        on right: 42 43 44 45 46 47 48 49 59
    functor_decl <AstFunctorDeclaration *> (100)
        on left: 51 52
        on right: 3
    functor_type <std::string> (101)
        on left: 53
        on right: 51 52 54 55
    functor_typeargs <std::string> (102)
        on left: 54 55
        on right: 51 54
    relation_decl <std::vector<AstRelation *>> (103)
        on left: 56
        on right: 4 186
    relation_list <std::vector<AstRelation *>> (104)
        on left: 57 58
        on right: 56 58 60
    relation_body <AstRelation *> (105)
        on left: 59
        on right: 57
    lattice_decl <std::vector<AstRelation *>> (106)
        on left: 60
        on right: 5
    lattice_asscoiation <AstLatticeAssociation *> (107)
        on left: 61
        on right: 6
    lattice_unary_def <AstLatticeUnaryFunction *> (108)
        on left: 62
        on right: 7
    lattice_unary_def_type <AstLatticeUnaryFunction *> (109)
        on left: 63 64
        on right: 62 64
    lattice_binary_def <AstLatticeBinaryFunction *> (110)
        on left: 65
        on right: 8
    lattice_binary_def_type <AstLatticeBinaryFunction *> (111)
        on left: 66 67
        on right: 65 67
    non_empty_key_value_pairs <AstIO *> (112)
        on left: 68 69 70 71 72 73 74 75
        on right: 76
    key_value_pairs <AstIO *> (113)
        on left: 76 77
        on right: 69 71 73 75 83
    load_head <std::vector<AstLoad *>> (114)
        on left: 78
        on right: 9 187
    store_head <std::vector<AstStore *>> (115)
        on left: 79 80
        on right: 10 188
    iodirective_list <std::vector<AstIO *>> (116)
        on left: 81 82
        on right: 78 79 80 82
    iodirective_body <AstIO *> (117)
        on left: 83 84
        on right: 81
    arg <AstArgument *> (118)
        on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129
        on right: 63 64 66 67 89 90 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 123 124 125 126 127 128 129 130 131 132 133 134 135 138 139 140 141 142 143 147 148 149 150 152 153
    condition <AstQuestionMark *> (119)
        on left: 130 131 132 133 134 135
        on right: 94
    functor_list <AstUserDefinedFunctor *> (120)
        on left: 136 137
        on right: 88
    functor_args <AstUserDefinedFunctor *> (121)
        on left: 138 139
        on right: 137 139
    recordlist <AstRecordInit *> (122)
        on left: 140 141
        on right: 119 141
    non_empty_arg_list <AstAtom *> (123)
        on left: 142 143
        on right: 144
    arg_list <AstAtom *> (124)
        on left: 144 145
        on right: 143 146
    atom <AstAtom *> (125)
        on left: 146
        on right: 121 123 125 127 151 156 157 158
    literal <RuleBody *> (126)
        on left: 147 148 149 150 151 152 153 154 155
        on right: 159
    fact <AstClause *> (127)
        on left: 156
        on right: 11 189
    head <std::vector<AstAtom*>> (128)
        on left: 157 158
        on right: 158 173
    term <RuleBody *> (129)
        on left: 159 160 161
        on right: 160 162 163
    conjunction <RuleBody *> (130)
        on left: 162 163
        on right: 163 164 165
    disjunction <RuleBody *> (131)
        on left: 164 165
        on right: 161 165 166
    body <RuleBody *> (132)
        on left: 166
        on right: 122 124 126 128 173
    exec_order_list <AstExecutionOrder *> (133)
        on left: 167 168
        on right: 168 169
    exec_order <AstExecutionOrder *> (134)
        on left: 169
        on right: 170 171
    exec_plan_list <AstExecutionPlan *> (135)
        on left: 170 171
        on right: 171 172
    exec_plan <AstExecutionPlan *> (136)
        on left: 172
        on right: 176
    rule_def <std::vector<AstClause*>> (137)
        on left: 173
        on right: 174
    rule <std::vector<AstClause*>> (138)
        on left: 174 175 176
        on right: 12 175 176 190
    type_param_list <std::vector<AstTypeIdentifier>> (139)
        on left: 177 178
        on right: 178 180
    type_params <std::vector<AstTypeIdentifier>> (140)
        on left: 179 180
        on right: 181
    comp_type <AstComponentType *> (141)
        on left: 181
        on right: 182 183 184 196
    component_head <AstComponent *> (142)
        on left: 182 183 184
        on right: 183 184 195
    component_body <AstComponent *> (143)
        on left: 185 186 187 188 189 190 191 192 193 194
        on right: 185 186 187 188 189 190 191 192 193 195
    component <AstComponent *> (144)
        on left: 195
        on right: 13 192
    comp_init <AstComponentInit *> (145)
        on left: 196
        on right: 14 193
    comp_override <std::string> (146)
        on left: 197
        on right: 191


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 16 (unit)

    program  go to state 1
    unit     go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: unit .
    2 unit: unit . type
    3     | unit . functor_decl
    4     | unit . relation_decl
    5     | unit . lattice_decl
    6     | unit . lattice_asscoiation
    7     | unit . lattice_unary_def
    8     | unit . lattice_binary_def
    9     | unit . load_head
   10     | unit . store_head
   11     | unit . fact
   12     | unit . rule
   13     | unit . component
   14     | unit . comp_init
   15     | unit . pragma

    "identifier"                           shift, and go to state 4
    "pragma directive"                     shift, and go to state 5
    "relation declaration"                 shift, and go to state 6
    "lattice declaration"                  shift, and go to state 7
    "lattice components type declaration"  shift, and go to state 8
    "lattice binary function definition"   shift, and go to state 9
    "functor declaration"                  shift, and go to state 10
    "input directives declaration"         shift, and go to state 11
    "output directives declaration"        shift, and go to state 12
    "printsize directives declaration"     shift, and go to state 13
    "type declaration"                     shift, and go to state 14
    "enum declaration"                     shift, and go to state 15
    "component declaration"                shift, and go to state 16
    "component instantiation"              shift, and go to state 17
    "numeric type declaration"             shift, and go to state 18
    "symbolic type declaration"            shift, and go to state 19

    $default  reduce using rule 1 (program)

    pragma               go to state 20
    type                 go to state 21
    rel_id               go to state 22
    functor_decl         go to state 23
    relation_decl        go to state 24
    lattice_decl         go to state 25
    lattice_asscoiation  go to state 26
    lattice_unary_def    go to state 27
    lattice_binary_def   go to state 28
    load_head            go to state 29
    store_head           go to state 30
    atom                 go to state 31
    fact                 go to state 32
    head                 go to state 33
    rule_def             go to state 34
    rule                 go to state 35
    component_head       go to state 36
    component            go to state 37
    comp_init            go to state 38


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

   36 rel_id: "identifier" .

    $default  reduce using rule 36 (rel_id)


State 5

   17 pragma: "pragma directive" . "symbol" "symbol"
   18       | "pragma directive" . "symbol"

    "symbol"  shift, and go to state 39


State 6

   56 relation_decl: "relation declaration" . relation_list

    "identifier"  shift, and go to state 40

    relation_list  go to state 41
    relation_body  go to state 42


State 7

   60 lattice_decl: "lattice declaration" . relation_list

    "identifier"  shift, and go to state 40

    relation_list  go to state 43
    relation_body  go to state 42


State 8

   61 lattice_asscoiation: "lattice components type declaration" . "identifier" "<" ">" "=" "(" "symbol" "," "symbol" "," "identifier" "," "identifier" ")"

    "identifier"  shift, and go to state 44


State 9

   62 lattice_unary_def: "lattice binary function definition" . "identifier" "(" "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_unary_def_type "}"
   65 lattice_binary_def: "lattice binary function definition" . "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

    "identifier"  shift, and go to state 45


State 10

   51 functor_decl: "functor declaration" . "identifier" "(" functor_typeargs ")" ":" functor_type
   52             | "functor declaration" . "identifier" "(" ")" ":" functor_type

    "identifier"  shift, and go to state 46


State 11

   78 load_head: "input directives declaration" . iodirective_list

    "identifier"  shift, and go to state 47

    rel_id            go to state 48
    iodirective_list  go to state 49
    iodirective_body  go to state 50


State 12

   79 store_head: "output directives declaration" . iodirective_list

    "identifier"  shift, and go to state 47

    rel_id            go to state 48
    iodirective_list  go to state 51
    iodirective_body  go to state 50


State 13

   80 store_head: "printsize directives declaration" . iodirective_list

    "identifier"  shift, and go to state 47

    rel_id            go to state 48
    iodirective_list  go to state 52
    iodirective_body  go to state 50


State 14

   23 type: "type declaration" . "identifier"
   24     | "type declaration" . "identifier" "=" uniontype
   25     | "type declaration" . "identifier" "=" "[" recordtype "]"
   26     | "type declaration" . "identifier" "=" "[" "]"

    "identifier"  shift, and go to state 53


State 15

   27 type: "enum declaration" . "identifier" "=" "{" enumtype "}"

    "identifier"  shift, and go to state 54


State 16

  182 component_head: "component declaration" . comp_type

    "identifier"  shift, and go to state 55

    comp_type  go to state 56


State 17

  196 comp_init: "component instantiation" . "identifier" "=" comp_type

    "identifier"  shift, and go to state 57


State 18

   21 type: "numeric type declaration" . "identifier"

    "identifier"  shift, and go to state 58


State 19

   22 type: "symbolic type declaration" . "identifier"

    "identifier"  shift, and go to state 59


State 20

   15 unit: unit pragma .

    $default  reduce using rule 15 (unit)


State 21

    2 unit: unit type .

    $default  reduce using rule 2 (unit)


State 22

   37 rel_id: rel_id . "." "identifier"
  146 atom: rel_id . "(" arg_list ")"

    "("  shift, and go to state 60
    "."  shift, and go to state 61


State 23

    3 unit: unit functor_decl .

    $default  reduce using rule 3 (unit)


State 24

    4 unit: unit relation_decl .

    $default  reduce using rule 4 (unit)


State 25

    5 unit: unit lattice_decl .

    $default  reduce using rule 5 (unit)


State 26

    6 unit: unit lattice_asscoiation .

    $default  reduce using rule 6 (unit)


State 27

    7 unit: unit lattice_unary_def .

    $default  reduce using rule 7 (unit)


State 28

    8 unit: unit lattice_binary_def .

    $default  reduce using rule 8 (unit)


State 29

    9 unit: unit load_head .

    $default  reduce using rule 9 (unit)


State 30

   10 unit: unit store_head .

    $default  reduce using rule 10 (unit)


State 31

  156 fact: atom . "."
  157 head: atom .

    "."  shift, and go to state 62

    $default  reduce using rule 157 (head)


State 32

   11 unit: unit fact .

    $default  reduce using rule 11 (unit)


State 33

  158 head: head . "," atom
  173 rule_def: head . ":-" body "."

    ":-"  shift, and go to state 63
    ","   shift, and go to state 64


State 34

  174 rule: rule_def .

    $default  reduce using rule 174 (rule)


State 35

   12 unit: unit rule .
  175 rule: rule . "strict marker"
  176     | rule . exec_plan

    "strict marker"  shift, and go to state 65
    "plan keyword"   shift, and go to state 66

    $default  reduce using rule 12 (unit)

    exec_plan  go to state 67


State 36

  183 component_head: component_head . ":" comp_type
  184               | component_head . "," comp_type
  195 component: component_head . "{" component_body "}"

    ","  shift, and go to state 68
    ":"  shift, and go to state 69
    "{"  shift, and go to state 70


State 37

   13 unit: unit component .

    $default  reduce using rule 13 (unit)


State 38

   14 unit: unit comp_init .

    $default  reduce using rule 14 (unit)


State 39

   17 pragma: "pragma directive" "symbol" . "symbol"
   18       | "pragma directive" "symbol" .

    "symbol"  shift, and go to state 71

    $default  reduce using rule 18 (pragma)


State 40

   58 relation_list: "identifier" . "," relation_list
   59 relation_body: "identifier" . "(" attributes ")" qualifiers

    "("  shift, and go to state 72
    ","  shift, and go to state 73


State 41

   56 relation_decl: "relation declaration" relation_list .

    $default  reduce using rule 56 (relation_decl)


State 42

   57 relation_list: relation_body .

    $default  reduce using rule 57 (relation_list)


State 43

   60 lattice_decl: "lattice declaration" relation_list .

    $default  reduce using rule 60 (lattice_decl)


State 44

   61 lattice_asscoiation: "lattice components type declaration" "identifier" . "<" ">" "=" "(" "symbol" "," "symbol" "," "identifier" "," "identifier" ")"

    "<"  shift, and go to state 74


State 45

   62 lattice_unary_def: "lattice binary function definition" "identifier" . "(" "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_unary_def_type "}"
   65 lattice_binary_def: "lattice binary function definition" "identifier" . "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

    "("  shift, and go to state 75


State 46

   51 functor_decl: "functor declaration" "identifier" . "(" functor_typeargs ")" ":" functor_type
   52             | "functor declaration" "identifier" . "(" ")" ":" functor_type

    "("  shift, and go to state 76


State 47

   36 rel_id: "identifier" .
   82 iodirective_list: "identifier" . "," iodirective_list

    ","  shift, and go to state 77

    $default  reduce using rule 36 (rel_id)


State 48

   37 rel_id: rel_id . "." "identifier"
   83 iodirective_body: rel_id . "(" key_value_pairs ")"
   84                 | rel_id .

    "("  shift, and go to state 78
    "."  shift, and go to state 61

    $default  reduce using rule 84 (iodirective_body)


State 49

   78 load_head: "input directives declaration" iodirective_list .

    $default  reduce using rule 78 (load_head)


State 50

   81 iodirective_list: iodirective_body .

    $default  reduce using rule 81 (iodirective_list)


State 51

   79 store_head: "output directives declaration" iodirective_list .

    $default  reduce using rule 79 (store_head)


State 52

   80 store_head: "printsize directives declaration" iodirective_list .

    $default  reduce using rule 80 (store_head)


State 53

   23 type: "type declaration" "identifier" .
   24     | "type declaration" "identifier" . "=" uniontype
   25     | "type declaration" "identifier" . "=" "[" recordtype "]"
   26     | "type declaration" "identifier" . "=" "[" "]"

    "="  shift, and go to state 79

    $default  reduce using rule 23 (type)


State 54

   27 type: "enum declaration" "identifier" . "=" "{" enumtype "}"

    "="  shift, and go to state 80


State 55

  181 comp_type: "identifier" . type_params

    "<"  shift, and go to state 81

    $default  reduce using rule 179 (type_params)

    type_params  go to state 82


State 56

  182 component_head: "component declaration" comp_type .

    $default  reduce using rule 182 (component_head)


State 57

  196 comp_init: "component instantiation" "identifier" . "=" comp_type

    "="  shift, and go to state 83


State 58

   21 type: "numeric type declaration" "identifier" .

    $default  reduce using rule 21 (type)


State 59

   22 type: "symbolic type declaration" "identifier" .

    $default  reduce using rule 22 (type)


State 60

  146 atom: rel_id "(" . arg_list ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    $default  reduce using rule 145 (arg_list)

    arg                 go to state 108
    condition           go to state 109
    non_empty_arg_list  go to state 110
    arg_list            go to state 111


State 61

   37 rel_id: rel_id "." . "identifier"

    "identifier"  shift, and go to state 112


State 62

  156 fact: atom "." .

    $default  reduce using rule 156 (fact)


State 63

  173 rule_def: head ":-" . body "."

    "reserved keyword"                                   shift, and go to state 84
    "symbol"                                             shift, and go to state 85
    "identifier"                                         shift, and go to state 113
    "number"                                             shift, and go to state 87
    "match predicate"                                    shift, and go to state 114
    "checks whether substring is contained in a string"  shift, and go to state 115
    "concatenation of two strings"                       shift, and go to state 88
    "ordinal number of a string"                         shift, and go to state 89
    "length of a string"                                 shift, and go to state 90
    "sub-string of a string"                             shift, and go to state 91
    "min aggregator"                                     shift, and go to state 92
    "max aggregator"                                     shift, and go to state 93
    "count aggregator"                                   shift, and go to state 94
    "sum aggregator"                                     shift, and go to state 95
    "true literal constraint"                            shift, and go to state 116
    "false literal constraint"                           shift, and go to state 117
    "convert string to number"                           shift, and go to state 96
    "convert number to string"                           shift, and go to state 97
    "nil reference"                                      shift, and go to state 98
    "["                                                  shift, and go to state 99
    "_"                                                  shift, and go to state 100
    "$"                                                  shift, and go to state 101
    "-"                                                  shift, and go to state 102
    "!"                                                  shift, and go to state 118
    "("                                                  shift, and go to state 119
    "@"                                                  shift, and go to state 104
    "&"                                                  shift, and go to state 105
    "bnot"                                               shift, and go to state 106
    "lnot"                                               shift, and go to state 107

    rel_id       go to state 22
    arg          go to state 120
    condition    go to state 109
    atom         go to state 121
    literal      go to state 122
    term         go to state 123
    conjunction  go to state 124
    disjunction  go to state 125
    body         go to state 126


State 64

  158 head: head "," . atom

    "identifier"  shift, and go to state 4

    rel_id  go to state 22
    atom    go to state 127


State 65

  175 rule: rule "strict marker" .

    $default  reduce using rule 175 (rule)


State 66

  172 exec_plan: "plan keyword" . exec_plan_list

    "number"  shift, and go to state 128

    exec_plan_list  go to state 129


State 67

  176 rule: rule exec_plan .

    $default  reduce using rule 176 (rule)


State 68

  184 component_head: component_head "," . comp_type

    "identifier"  shift, and go to state 55

    comp_type  go to state 130


State 69

  183 component_head: component_head ":" . comp_type

    "identifier"  shift, and go to state 55

    comp_type  go to state 131


State 70

  195 component: component_head "{" . component_body "}"

    $default  reduce using rule 194 (component_body)

    component_body  go to state 132


State 71

   17 pragma: "pragma directive" "symbol" "symbol" .

    $default  reduce using rule 17 (pragma)


State 72

   59 relation_body: "identifier" "(" . attributes ")" qualifiers

    "identifier"  shift, and go to state 133

    $default  reduce using rule 41 (attributes)

    non_empty_attributes  go to state 134
    attributes            go to state 135


State 73

   58 relation_list: "identifier" "," . relation_list

    "identifier"  shift, and go to state 40

    relation_list  go to state 136
    relation_body  go to state 42


State 74

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" . ">" "=" "(" "symbol" "," "symbol" "," "identifier" "," "identifier" ")"

    ">"  shift, and go to state 137


State 75

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" . "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_unary_def_type "}"
   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" . "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

    "identifier"  shift, and go to state 138


State 76

   51 functor_decl: "functor declaration" "identifier" "(" . functor_typeargs ")" ":" functor_type
   52             | "functor declaration" "identifier" "(" . ")" ":" functor_type

    "identifier"  shift, and go to state 139
    ")"           shift, and go to state 140

    functor_type      go to state 141
    functor_typeargs  go to state 142


State 77

   82 iodirective_list: "identifier" "," . iodirective_list

    "identifier"  shift, and go to state 47

    rel_id            go to state 48
    iodirective_list  go to state 143
    iodirective_body  go to state 50


State 78

   83 iodirective_body: rel_id "(" . key_value_pairs ")"

    "identifier"  shift, and go to state 144

    $default  reduce using rule 77 (key_value_pairs)

    non_empty_key_value_pairs  go to state 145
    key_value_pairs            go to state 146


State 79

   24 type: "type declaration" "identifier" "=" . uniontype
   25     | "type declaration" "identifier" "=" . "[" recordtype "]"
   26     | "type declaration" "identifier" "=" . "[" "]"

    "identifier"  shift, and go to state 147
    "["           shift, and go to state 148

    type_id    go to state 149
    uniontype  go to state 150


State 80

   27 type: "enum declaration" "identifier" "=" . "{" enumtype "}"

    "{"  shift, and go to state 151


State 81

  180 type_params: "<" . type_param_list ">"

    "identifier"  shift, and go to state 152

    type_param_list  go to state 153


State 82

  181 comp_type: "identifier" type_params .

    $default  reduce using rule 181 (comp_type)


State 83

  196 comp_init: "component instantiation" "identifier" "=" . comp_type

    "identifier"  shift, and go to state 55

    comp_type  go to state 154


State 84

  129 arg: "reserved keyword" . "(" arg ")"

    "("  shift, and go to state 155


State 85

   85 arg: "symbol" .

    $default  reduce using rule 85 (arg)


State 86

   91 arg: "identifier" .

    $default  reduce using rule 91 (arg)


State 87

   92 arg: "number" .

    $default  reduce using rule 92 (arg)


State 88

  108 arg: "concatenation of two strings" . "(" arg "," arg ")"

    "("  shift, and go to state 156


State 89

  109 arg: "ordinal number of a string" . "(" arg ")"

    "("  shift, and go to state 157


State 90

  110 arg: "length of a string" . "(" arg ")"

    "("  shift, and go to state 158


State 91

  113 arg: "sub-string of a string" . "(" arg "," arg "," arg ")"

    "("  shift, and go to state 159


State 92

  107 arg: "min aggregator" . "(" arg "," arg ")"
  125    | "min aggregator" . arg ":" atom
  126    | "min aggregator" . arg ":" "{" body "}"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 160
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 161
    condition  go to state 109


State 93

  106 arg: "max aggregator" . "(" arg "," arg ")"
  127    | "max aggregator" . arg ":" atom
  128    | "max aggregator" . arg ":" "{" body "}"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 162
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 163
    condition  go to state 109


State 94

  121 arg: "count aggregator" . ":" atom
  122    | "count aggregator" . ":" "{" body "}"

    ":"  shift, and go to state 164


State 95

  123 arg: "sum aggregator" . arg ":" atom
  124    | "sum aggregator" . arg ":" "{" body "}"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 165
    condition  go to state 109


State 96

  111 arg: "convert string to number" . "(" arg ")"

    "("  shift, and go to state 166


State 97

  112 arg: "convert number to string" . "(" arg ")"

    "("  shift, and go to state 167


State 98

  120 arg: "nil reference" .

    $default  reduce using rule 120 (arg)


State 99

  118 arg: "[" . "]"
  119    | "[" . recordlist "]"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "]"                             shift, and go to state 168
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg         go to state 169
    condition   go to state 109
    recordlist  go to state 170


State 100

   86 arg: "_" .

    $default  reduce using rule 86 (arg)


State 101

   87 arg: "$" .

    $default  reduce using rule 87 (arg)


State 102

  115 arg: "-" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 171
    condition  go to state 109


State 103

   93 arg: "(" . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 172
    condition  go to state 109


State 104

   88 arg: "@" . "identifier" functor_list

    "identifier"  shift, and go to state 173


State 105

   89 arg: "&" . "identifier" "(" arg ")"
   90    | "&" . "identifier" "(" arg "," arg ")"

    "identifier"  shift, and go to state 174


State 106

  116 arg: "bnot" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 175
    condition  go to state 109


State 107

  117 arg: "lnot" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 176
    condition  go to state 109


State 108

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  142 non_empty_arg_list: arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 142 (non_empty_arg_list)


State 109

   94 arg: condition . "?" arg ":" arg

    "?"  shift, and go to state 193


State 110

  144 arg_list: non_empty_arg_list .

    $default  reduce using rule 144 (arg_list)


State 111

  143 non_empty_arg_list: arg_list . "," arg
  146 atom: rel_id "(" arg_list . ")"

    ")"  shift, and go to state 194
    ","  shift, and go to state 195


State 112

   37 rel_id: rel_id "." "identifier" .

    $default  reduce using rule 37 (rel_id)


State 113

   36 rel_id: "identifier" .
   91 arg: "identifier" .

    "("       reduce using rule 36 (rel_id)
    "."       reduce using rule 36 (rel_id)
    $default  reduce using rule 91 (arg)


State 114

  152 literal: "match predicate" . "(" arg "," arg ")"

    "("  shift, and go to state 196


State 115

  153 literal: "checks whether substring is contained in a string" . "(" arg "," arg ")"

    "("  shift, and go to state 197


State 116

  154 literal: "true literal constraint" .

    $default  reduce using rule 154 (literal)


State 117

  155 literal: "false literal constraint" .

    $default  reduce using rule 155 (literal)


State 118

  160 term: "!" . term

    "reserved keyword"                                   shift, and go to state 84
    "symbol"                                             shift, and go to state 85
    "identifier"                                         shift, and go to state 113
    "number"                                             shift, and go to state 87
    "match predicate"                                    shift, and go to state 114
    "checks whether substring is contained in a string"  shift, and go to state 115
    "concatenation of two strings"                       shift, and go to state 88
    "ordinal number of a string"                         shift, and go to state 89
    "length of a string"                                 shift, and go to state 90
    "sub-string of a string"                             shift, and go to state 91
    "min aggregator"                                     shift, and go to state 92
    "max aggregator"                                     shift, and go to state 93
    "count aggregator"                                   shift, and go to state 94
    "sum aggregator"                                     shift, and go to state 95
    "true literal constraint"                            shift, and go to state 116
    "false literal constraint"                           shift, and go to state 117
    "convert string to number"                           shift, and go to state 96
    "convert number to string"                           shift, and go to state 97
    "nil reference"                                      shift, and go to state 98
    "["                                                  shift, and go to state 99
    "_"                                                  shift, and go to state 100
    "$"                                                  shift, and go to state 101
    "-"                                                  shift, and go to state 102
    "!"                                                  shift, and go to state 118
    "("                                                  shift, and go to state 119
    "@"                                                  shift, and go to state 104
    "&"                                                  shift, and go to state 105
    "bnot"                                               shift, and go to state 106
    "lnot"                                               shift, and go to state 107

    rel_id     go to state 22
    arg        go to state 120
    condition  go to state 109
    atom       go to state 121
    literal    go to state 122
    term       go to state 198


State 119

   93 arg: "(" . arg ")"
  161 term: "(" . disjunction ")"

    "reserved keyword"                                   shift, and go to state 84
    "symbol"                                             shift, and go to state 85
    "identifier"                                         shift, and go to state 113
    "number"                                             shift, and go to state 87
    "match predicate"                                    shift, and go to state 114
    "checks whether substring is contained in a string"  shift, and go to state 115
    "concatenation of two strings"                       shift, and go to state 88
    "ordinal number of a string"                         shift, and go to state 89
    "length of a string"                                 shift, and go to state 90
    "sub-string of a string"                             shift, and go to state 91
    "min aggregator"                                     shift, and go to state 92
    "max aggregator"                                     shift, and go to state 93
    "count aggregator"                                   shift, and go to state 94
    "sum aggregator"                                     shift, and go to state 95
    "true literal constraint"                            shift, and go to state 116
    "false literal constraint"                           shift, and go to state 117
    "convert string to number"                           shift, and go to state 96
    "convert number to string"                           shift, and go to state 97
    "nil reference"                                      shift, and go to state 98
    "["                                                  shift, and go to state 99
    "_"                                                  shift, and go to state 100
    "$"                                                  shift, and go to state 101
    "-"                                                  shift, and go to state 102
    "!"                                                  shift, and go to state 118
    "("                                                  shift, and go to state 119
    "@"                                                  shift, and go to state 104
    "&"                                                  shift, and go to state 105
    "bnot"                                               shift, and go to state 106
    "lnot"                                               shift, and go to state 107

    rel_id       go to state 22
    arg          go to state 199
    condition    go to state 109
    atom         go to state 121
    literal      go to state 122
    term         go to state 123
    conjunction  go to state 124
    disjunction  go to state 200


State 120

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  147 literal: arg . "relational operator" arg
  148        | arg . "<" arg
  149        | arg . ">" arg
  150        | arg . "=" arg

    "relational operator"  shift, and go to state 201
    "type cast"            shift, and go to state 177
    "+"                    shift, and go to state 178
    "-"                    shift, and go to state 179
    "!"                    shift, and go to state 180
    "="                    shift, and go to state 202
    "*"                    shift, and go to state 182
    "/"                    shift, and go to state 183
    "^"                    shift, and go to state 184
    "%"                    shift, and go to state 185
    "<"                    shift, and go to state 203
    ">"                    shift, and go to state 204
    "band"                 shift, and go to state 188
    "bor"                  shift, and go to state 189
    "bxor"                 shift, and go to state 190
    "land"                 shift, and go to state 191
    "lor"                  shift, and go to state 192


State 121

  151 literal: atom .

    $default  reduce using rule 151 (literal)


State 122

  159 term: literal .

    $default  reduce using rule 159 (term)


State 123

  162 conjunction: term .

    $default  reduce using rule 162 (conjunction)


State 124

  163 conjunction: conjunction . "," term
  164 disjunction: conjunction .

    ","  shift, and go to state 205

    $default  reduce using rule 164 (disjunction)


State 125

  165 disjunction: disjunction . ";" conjunction
  166 body: disjunction .

    ";"  shift, and go to state 206

    $default  reduce using rule 166 (body)


State 126

  173 rule_def: head ":-" body . "."

    "."  shift, and go to state 207


State 127

  158 head: head "," atom .

    $default  reduce using rule 158 (head)


State 128

  170 exec_plan_list: "number" . ":" exec_order

    ":"  shift, and go to state 208


State 129

  171 exec_plan_list: exec_plan_list . "," "number" ":" exec_order
  172 exec_plan: "plan keyword" exec_plan_list .

    ","  shift, and go to state 209

    $default  reduce using rule 172 (exec_plan)


State 130

  184 component_head: component_head "," comp_type .

    $default  reduce using rule 184 (component_head)


State 131

  183 component_head: component_head ":" comp_type .

    $default  reduce using rule 183 (component_head)


State 132

  185 component_body: component_body . type
  186               | component_body . relation_decl
  187               | component_body . load_head
  188               | component_body . store_head
  189               | component_body . fact
  190               | component_body . rule
  191               | component_body . comp_override
  192               | component_body . component
  193               | component_body . comp_init
  195 component: component_head "{" component_body . "}"

    "identifier"                         shift, and go to state 4
    "relation declaration"               shift, and go to state 6
    "input directives declaration"       shift, and go to state 11
    "output directives declaration"      shift, and go to state 12
    "printsize directives declaration"   shift, and go to state 13
    "override rules of super-component"  shift, and go to state 210
    "type declaration"                   shift, and go to state 14
    "enum declaration"                   shift, and go to state 15
    "component declaration"              shift, and go to state 16
    "component instantiation"            shift, and go to state 17
    "numeric type declaration"           shift, and go to state 18
    "symbolic type declaration"          shift, and go to state 19
    "}"                                  shift, and go to state 211

    type            go to state 212
    rel_id          go to state 22
    relation_decl   go to state 213
    load_head       go to state 214
    store_head      go to state 215
    atom            go to state 31
    fact            go to state 216
    head            go to state 33
    rule_def        go to state 34
    rule            go to state 217
    component_head  go to state 36
    component       go to state 218
    comp_init       go to state 219
    comp_override   go to state 220


State 133

   38 non_empty_attributes: "identifier" . ":" type_id

    ":"  shift, and go to state 221


State 134

   40 attributes: non_empty_attributes .

    $default  reduce using rule 40 (attributes)


State 135

   39 non_empty_attributes: attributes . "," "identifier" ":" type_id
   59 relation_body: "identifier" "(" attributes . ")" qualifiers

    ")"  shift, and go to state 222
    ","  shift, and go to state 223


State 136

   58 relation_list: "identifier" "," relation_list .

    $default  reduce using rule 58 (relation_list)


State 137

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" . "=" "(" "symbol" "," "symbol" "," "identifier" "," "identifier" ")"

    "="  shift, and go to state 224


State 138

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" . ":" "identifier" ")" ":" "identifier" "{" lattice_unary_def_type "}"
   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" . ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

    ":"  shift, and go to state 225


State 139

   53 functor_type: "identifier" .

    $default  reduce using rule 53 (functor_type)


State 140

   52 functor_decl: "functor declaration" "identifier" "(" ")" . ":" functor_type

    ":"  shift, and go to state 226


State 141

   54 functor_typeargs: functor_type . "," functor_typeargs
   55                 | functor_type .

    ","  shift, and go to state 227

    $default  reduce using rule 55 (functor_typeargs)


State 142

   51 functor_decl: "functor declaration" "identifier" "(" functor_typeargs . ")" ":" functor_type

    ")"  shift, and go to state 228


State 143

   82 iodirective_list: "identifier" "," iodirective_list .

    $default  reduce using rule 82 (iodirective_list)


State 144

   68 non_empty_key_value_pairs: "identifier" . "=" "symbol"
   70                          | "identifier" . "=" "identifier"
   72                          | "identifier" . "=" "true literal constraint"
   74                          | "identifier" . "=" "false literal constraint"

    "="  shift, and go to state 229


State 145

   76 key_value_pairs: non_empty_key_value_pairs .

    $default  reduce using rule 76 (key_value_pairs)


State 146

   69 non_empty_key_value_pairs: key_value_pairs . "," "identifier" "=" "symbol"
   71                          | key_value_pairs . "," "identifier" "=" "identifier"
   73                          | key_value_pairs . "," "identifier" "=" "true literal constraint"
   75                          | key_value_pairs . "," "identifier" "=" "false literal constraint"
   83 iodirective_body: rel_id "(" key_value_pairs . ")"

    ")"  shift, and go to state 230
    ","  shift, and go to state 231


State 147

   19 type_id: "identifier" .

    $default  reduce using rule 19 (type_id)


State 148

   25 type: "type declaration" "identifier" "=" "[" . recordtype "]"
   26     | "type declaration" "identifier" "=" "[" . "]"

    "identifier"  shift, and go to state 232
    "]"           shift, and go to state 233

    recordtype  go to state 234


State 149

   20 type_id: type_id . "." "identifier"
   30 uniontype: type_id .

    "."  shift, and go to state 235

    $default  reduce using rule 30 (uniontype)


State 150

   24 type: "type declaration" "identifier" "=" uniontype .
   31 uniontype: uniontype . "|" type_id

    "|"  shift, and go to state 236

    $default  reduce using rule 24 (type)


State 151

   27 type: "enum declaration" "identifier" "=" "{" . enumtype "}"

    "case"  shift, and go to state 237

    enumtype  go to state 238


State 152

  177 type_param_list: "identifier" .

    $default  reduce using rule 177 (type_param_list)


State 153

  178 type_param_list: type_param_list . "," type_id
  180 type_params: "<" type_param_list . ">"

    ","  shift, and go to state 239
    ">"  shift, and go to state 240


State 154

  196 comp_init: "component instantiation" "identifier" "=" comp_type .

    $default  reduce using rule 196 (comp_init)


State 155

  129 arg: "reserved keyword" "(" . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 241
    condition  go to state 109


State 156

  108 arg: "concatenation of two strings" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 242
    condition  go to state 109


State 157

  109 arg: "ordinal number of a string" "(" . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 243
    condition  go to state 109


State 158

  110 arg: "length of a string" "(" . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 244
    condition  go to state 109


State 159

  113 arg: "sub-string of a string" "(" . arg "," arg "," arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 245
    condition  go to state 109


State 160

   93 arg: "(" . arg ")"
  107    | "min aggregator" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 246
    condition  go to state 109


State 161

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  125    | "min aggregator" arg . ":" atom
  126    | "min aggregator" arg . ":" "{" body "}"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ":"          shift, and go to state 247
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 162

   93 arg: "(" . arg ")"
  106    | "max aggregator" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 248
    condition  go to state 109


State 163

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  127    | "max aggregator" arg . ":" atom
  128    | "max aggregator" arg . ":" "{" body "}"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ":"          shift, and go to state 249
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 164

  121 arg: "count aggregator" ":" . atom
  122    | "count aggregator" ":" . "{" body "}"

    "identifier"  shift, and go to state 4
    "{"           shift, and go to state 250

    rel_id  go to state 22
    atom    go to state 251


State 165

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  123    | "sum aggregator" arg . ":" atom
  124    | "sum aggregator" arg . ":" "{" body "}"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ":"          shift, and go to state 252
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 166

  111 arg: "convert string to number" "(" . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 253
    condition  go to state 109


State 167

  112 arg: "convert number to string" "(" . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 254
    condition  go to state 109


State 168

  118 arg: "[" "]" .

    $default  reduce using rule 118 (arg)


State 169

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  140 recordlist: arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 140 (recordlist)


State 170

  119 arg: "[" recordlist . "]"
  141 recordlist: recordlist . "," arg

    "]"  shift, and go to state 255
    ","  shift, and go to state 256


State 171

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  115    | "-" arg .
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "^"  shift, and go to state 184
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 115 (arg)


State 172

   93 arg: "(" arg . ")"
   95    | arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 257
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 173

   88 arg: "@" "identifier" . functor_list

    "("  shift, and go to state 258

    functor_list  go to state 259


State 174

   89 arg: "&" "identifier" . "(" arg ")"
   90    | "&" "identifier" . "(" arg "," arg ")"

    "("  shift, and go to state 260


State 175

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  116    | "bnot" arg .
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "^"  shift, and go to state 184
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 116 (arg)


State 176

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  117    | "lnot" arg .
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "^"  shift, and go to state 184
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 117 (arg)


State 177

  114 arg: arg "type cast" . "identifier"

    "identifier"  shift, and go to state 261


State 178

  100 arg: arg "+" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 262
    condition  go to state 109


State 179

  101 arg: arg "-" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 263
    condition  go to state 109


State 180

  131 condition: arg "!" . "=" arg

    "="  shift, and go to state 264


State 181

  130 condition: arg "=" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 265
    condition  go to state 109


State 182

  102 arg: arg "*" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 266
    condition  go to state 109


State 183

  103 arg: arg "/" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 267
    condition  go to state 109


State 184

  105 arg: arg "^" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 268
    condition  go to state 109


State 185

  104 arg: arg "%" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 269
    condition  go to state 109


State 186

  132 condition: arg "<" . arg
  133          | arg "<" . "=" arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "="                             shift, and go to state 270
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 271
    condition  go to state 109


State 187

  134 condition: arg ">" . arg
  135          | arg ">" . "=" arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "="                             shift, and go to state 272
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 273
    condition  go to state 109


State 188

   97 arg: arg "band" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 274
    condition  go to state 109


State 189

   95 arg: arg "bor" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 275
    condition  go to state 109


State 190

   96 arg: arg "bxor" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 276
    condition  go to state 109


State 191

   99 arg: arg "land" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 277
    condition  go to state 109


State 192

   98 arg: arg "lor" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 278
    condition  go to state 109


State 193

   94 arg: condition "?" . arg ":" arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 279
    condition  go to state 109


State 194

  146 atom: rel_id "(" arg_list ")" .

    $default  reduce using rule 146 (atom)


State 195

  143 non_empty_arg_list: arg_list "," . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 280
    condition  go to state 109


State 196

  152 literal: "match predicate" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 281
    condition  go to state 109


State 197

  153 literal: "checks whether substring is contained in a string" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 282
    condition  go to state 109


State 198

  160 term: "!" term .

    $default  reduce using rule 160 (term)


State 199

   93 arg: "(" arg . ")"
   95    | arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  147 literal: arg . "relational operator" arg
  148        | arg . "<" arg
  149        | arg . ">" arg
  150        | arg . "=" arg

    "relational operator"  shift, and go to state 201
    "type cast"            shift, and go to state 177
    "+"                    shift, and go to state 178
    "-"                    shift, and go to state 179
    "!"                    shift, and go to state 180
    ")"                    shift, and go to state 257
    "="                    shift, and go to state 202
    "*"                    shift, and go to state 182
    "/"                    shift, and go to state 183
    "^"                    shift, and go to state 184
    "%"                    shift, and go to state 185
    "<"                    shift, and go to state 203
    ">"                    shift, and go to state 204
    "band"                 shift, and go to state 188
    "bor"                  shift, and go to state 189
    "bxor"                 shift, and go to state 190
    "land"                 shift, and go to state 191
    "lor"                  shift, and go to state 192


State 200

  161 term: "(" disjunction . ")"
  165 disjunction: disjunction . ";" conjunction

    ")"  shift, and go to state 283
    ";"  shift, and go to state 206


State 201

  147 literal: arg "relational operator" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 284
    condition  go to state 109


State 202

  130 condition: arg "=" . arg
  150 literal: arg "=" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 285
    condition  go to state 109


State 203

  132 condition: arg "<" . arg
  133          | arg "<" . "=" arg
  148 literal: arg "<" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "="                             shift, and go to state 270
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 286
    condition  go to state 109


State 204

  134 condition: arg ">" . arg
  135          | arg ">" . "=" arg
  149 literal: arg ">" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "="                             shift, and go to state 272
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 287
    condition  go to state 109


State 205

  163 conjunction: conjunction "," . term

    "reserved keyword"                                   shift, and go to state 84
    "symbol"                                             shift, and go to state 85
    "identifier"                                         shift, and go to state 113
    "number"                                             shift, and go to state 87
    "match predicate"                                    shift, and go to state 114
    "checks whether substring is contained in a string"  shift, and go to state 115
    "concatenation of two strings"                       shift, and go to state 88
    "ordinal number of a string"                         shift, and go to state 89
    "length of a string"                                 shift, and go to state 90
    "sub-string of a string"                             shift, and go to state 91
    "min aggregator"                                     shift, and go to state 92
    "max aggregator"                                     shift, and go to state 93
    "count aggregator"                                   shift, and go to state 94
    "sum aggregator"                                     shift, and go to state 95
    "true literal constraint"                            shift, and go to state 116
    "false literal constraint"                           shift, and go to state 117
    "convert string to number"                           shift, and go to state 96
    "convert number to string"                           shift, and go to state 97
    "nil reference"                                      shift, and go to state 98
    "["                                                  shift, and go to state 99
    "_"                                                  shift, and go to state 100
    "$"                                                  shift, and go to state 101
    "-"                                                  shift, and go to state 102
    "!"                                                  shift, and go to state 118
    "("                                                  shift, and go to state 119
    "@"                                                  shift, and go to state 104
    "&"                                                  shift, and go to state 105
    "bnot"                                               shift, and go to state 106
    "lnot"                                               shift, and go to state 107

    rel_id     go to state 22
    arg        go to state 120
    condition  go to state 109
    atom       go to state 121
    literal    go to state 122
    term       go to state 288


State 206

  165 disjunction: disjunction ";" . conjunction

    "reserved keyword"                                   shift, and go to state 84
    "symbol"                                             shift, and go to state 85
    "identifier"                                         shift, and go to state 113
    "number"                                             shift, and go to state 87
    "match predicate"                                    shift, and go to state 114
    "checks whether substring is contained in a string"  shift, and go to state 115
    "concatenation of two strings"                       shift, and go to state 88
    "ordinal number of a string"                         shift, and go to state 89
    "length of a string"                                 shift, and go to state 90
    "sub-string of a string"                             shift, and go to state 91
    "min aggregator"                                     shift, and go to state 92
    "max aggregator"                                     shift, and go to state 93
    "count aggregator"                                   shift, and go to state 94
    "sum aggregator"                                     shift, and go to state 95
    "true literal constraint"                            shift, and go to state 116
    "false literal constraint"                           shift, and go to state 117
    "convert string to number"                           shift, and go to state 96
    "convert number to string"                           shift, and go to state 97
    "nil reference"                                      shift, and go to state 98
    "["                                                  shift, and go to state 99
    "_"                                                  shift, and go to state 100
    "$"                                                  shift, and go to state 101
    "-"                                                  shift, and go to state 102
    "!"                                                  shift, and go to state 118
    "("                                                  shift, and go to state 119
    "@"                                                  shift, and go to state 104
    "&"                                                  shift, and go to state 105
    "bnot"                                               shift, and go to state 106
    "lnot"                                               shift, and go to state 107

    rel_id       go to state 22
    arg          go to state 120
    condition    go to state 109
    atom         go to state 121
    literal      go to state 122
    term         go to state 123
    conjunction  go to state 289


State 207

  173 rule_def: head ":-" body "." .

    $default  reduce using rule 173 (rule_def)


State 208

  170 exec_plan_list: "number" ":" . exec_order

    "("  shift, and go to state 290

    exec_order  go to state 291


State 209

  171 exec_plan_list: exec_plan_list "," . "number" ":" exec_order

    "number"  shift, and go to state 292


State 210

  197 comp_override: "override rules of super-component" . "identifier"

    "identifier"  shift, and go to state 293


State 211

  195 component: component_head "{" component_body "}" .

    $default  reduce using rule 195 (component)


State 212

  185 component_body: component_body type .

    $default  reduce using rule 185 (component_body)


State 213

  186 component_body: component_body relation_decl .

    $default  reduce using rule 186 (component_body)


State 214

  187 component_body: component_body load_head .

    $default  reduce using rule 187 (component_body)


State 215

  188 component_body: component_body store_head .

    $default  reduce using rule 188 (component_body)


State 216

  189 component_body: component_body fact .

    $default  reduce using rule 189 (component_body)


State 217

  175 rule: rule . "strict marker"
  176     | rule . exec_plan
  190 component_body: component_body rule .

    "strict marker"  shift, and go to state 65
    "plan keyword"   shift, and go to state 66

    $default  reduce using rule 190 (component_body)

    exec_plan  go to state 67


State 218

  192 component_body: component_body component .

    $default  reduce using rule 192 (component_body)


State 219

  193 component_body: component_body comp_init .

    $default  reduce using rule 193 (component_body)


State 220

  191 component_body: component_body comp_override .

    $default  reduce using rule 191 (component_body)


State 221

   38 non_empty_attributes: "identifier" ":" . type_id

    "identifier"  shift, and go to state 147

    type_id  go to state 294


State 222

   59 relation_body: "identifier" "(" attributes ")" . qualifiers

    $default  reduce using rule 50 (qualifiers)

    qualifiers  go to state 295


State 223

   39 non_empty_attributes: attributes "," . "identifier" ":" type_id

    "identifier"  shift, and go to state 296


State 224

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" . "(" "symbol" "," "symbol" "," "identifier" "," "identifier" ")"

    "("  shift, and go to state 297


State 225

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" . "identifier" ")" ":" "identifier" "{" lattice_unary_def_type "}"
   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" . "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

    "identifier"  shift, and go to state 298


State 226

   52 functor_decl: "functor declaration" "identifier" "(" ")" ":" . functor_type

    "identifier"  shift, and go to state 139

    functor_type  go to state 299


State 227

   54 functor_typeargs: functor_type "," . functor_typeargs

    "identifier"  shift, and go to state 139

    functor_type      go to state 141
    functor_typeargs  go to state 300


State 228

   51 functor_decl: "functor declaration" "identifier" "(" functor_typeargs ")" . ":" functor_type

    ":"  shift, and go to state 301


State 229

   68 non_empty_key_value_pairs: "identifier" "=" . "symbol"
   70                          | "identifier" "=" . "identifier"
   72                          | "identifier" "=" . "true literal constraint"
   74                          | "identifier" "=" . "false literal constraint"

    "symbol"                    shift, and go to state 302
    "identifier"                shift, and go to state 303
    "true literal constraint"   shift, and go to state 304
    "false literal constraint"  shift, and go to state 305


State 230

   83 iodirective_body: rel_id "(" key_value_pairs ")" .

    $default  reduce using rule 83 (iodirective_body)


State 231

   69 non_empty_key_value_pairs: key_value_pairs "," . "identifier" "=" "symbol"
   71                          | key_value_pairs "," . "identifier" "=" "identifier"
   73                          | key_value_pairs "," . "identifier" "=" "true literal constraint"
   75                          | key_value_pairs "," . "identifier" "=" "false literal constraint"

    "identifier"  shift, and go to state 306


State 232

   28 recordtype: "identifier" . ":" type_id

    ":"  shift, and go to state 307


State 233

   26 type: "type declaration" "identifier" "=" "[" "]" .

    $default  reduce using rule 26 (type)


State 234

   25 type: "type declaration" "identifier" "=" "[" recordtype . "]"
   29 recordtype: recordtype . "," "identifier" ":" type_id

    "]"  shift, and go to state 308
    ","  shift, and go to state 309


State 235

   20 type_id: type_id "." . "identifier"

    "identifier"  shift, and go to state 310


State 236

   31 uniontype: uniontype "|" . type_id

    "identifier"  shift, and go to state 147

    type_id  go to state 311


State 237

   32 enumtype: "case" . "symbol"
   33         | "case" . "numeric type declaration"

    "symbol"                    shift, and go to state 312
    "numeric type declaration"  shift, and go to state 313


State 238

   27 type: "enum declaration" "identifier" "=" "{" enumtype . "}"
   34 enumtype: enumtype . "," "case" "symbol"
   35         | enumtype . "," "case" "numeric type declaration"

    ","  shift, and go to state 314
    "}"  shift, and go to state 315


State 239

  178 type_param_list: type_param_list "," . type_id

    "identifier"  shift, and go to state 147

    type_id  go to state 316


State 240

  180 type_params: "<" type_param_list ">" .

    $default  reduce using rule 180 (type_params)


State 241

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  129    | "reserved keyword" "(" arg . ")"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 317
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 242

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  108    | "concatenation of two strings" "(" arg . "," arg ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ","          shift, and go to state 318
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 243

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  109    | "ordinal number of a string" "(" arg . ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 319
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 244

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  110    | "length of a string" "(" arg . ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 320
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 245

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  113    | "sub-string of a string" "(" arg . "," arg "," arg ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ","          shift, and go to state 321
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 246

   93 arg: "(" arg . ")"
   95    | arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  107    | "min aggregator" "(" arg . "," arg ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 257
    ","          shift, and go to state 322
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 247

  125 arg: "min aggregator" arg ":" . atom
  126    | "min aggregator" arg ":" . "{" body "}"

    "identifier"  shift, and go to state 4
    "{"           shift, and go to state 323

    rel_id  go to state 22
    atom    go to state 324


State 248

   93 arg: "(" arg . ")"
   95    | arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  106    | "max aggregator" "(" arg . "," arg ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 257
    ","          shift, and go to state 325
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 249

  127 arg: "max aggregator" arg ":" . atom
  128    | "max aggregator" arg ":" . "{" body "}"

    "identifier"  shift, and go to state 4
    "{"           shift, and go to state 326

    rel_id  go to state 22
    atom    go to state 327


State 250

  122 arg: "count aggregator" ":" "{" . body "}"

    "reserved keyword"                                   shift, and go to state 84
    "symbol"                                             shift, and go to state 85
    "identifier"                                         shift, and go to state 113
    "number"                                             shift, and go to state 87
    "match predicate"                                    shift, and go to state 114
    "checks whether substring is contained in a string"  shift, and go to state 115
    "concatenation of two strings"                       shift, and go to state 88
    "ordinal number of a string"                         shift, and go to state 89
    "length of a string"                                 shift, and go to state 90
    "sub-string of a string"                             shift, and go to state 91
    "min aggregator"                                     shift, and go to state 92
    "max aggregator"                                     shift, and go to state 93
    "count aggregator"                                   shift, and go to state 94
    "sum aggregator"                                     shift, and go to state 95
    "true literal constraint"                            shift, and go to state 116
    "false literal constraint"                           shift, and go to state 117
    "convert string to number"                           shift, and go to state 96
    "convert number to string"                           shift, and go to state 97
    "nil reference"                                      shift, and go to state 98
    "["                                                  shift, and go to state 99
    "_"                                                  shift, and go to state 100
    "$"                                                  shift, and go to state 101
    "-"                                                  shift, and go to state 102
    "!"                                                  shift, and go to state 118
    "("                                                  shift, and go to state 119
    "@"                                                  shift, and go to state 104
    "&"                                                  shift, and go to state 105
    "bnot"                                               shift, and go to state 106
    "lnot"                                               shift, and go to state 107

    rel_id       go to state 22
    arg          go to state 120
    condition    go to state 109
    atom         go to state 121
    literal      go to state 122
    term         go to state 123
    conjunction  go to state 124
    disjunction  go to state 125
    body         go to state 328


State 251

  121 arg: "count aggregator" ":" atom .

    $default  reduce using rule 121 (arg)


State 252

  123 arg: "sum aggregator" arg ":" . atom
  124    | "sum aggregator" arg ":" . "{" body "}"

    "identifier"  shift, and go to state 4
    "{"           shift, and go to state 329

    rel_id  go to state 22
    atom    go to state 330


State 253

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  111    | "convert string to number" "(" arg . ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 331
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 254

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  112    | "convert number to string" "(" arg . ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 332
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 255

  119 arg: "[" recordlist "]" .

    $default  reduce using rule 119 (arg)


State 256

  141 recordlist: recordlist "," . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 333
    condition  go to state 109


State 257

   93 arg: "(" arg ")" .

    $default  reduce using rule 93 (arg)


State 258

  136 functor_list: "(" . ")"
  137             | "(" . functor_args ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    ")"                             shift, and go to state 334
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg           go to state 335
    condition     go to state 109
    functor_args  go to state 336


State 259

   88 arg: "@" "identifier" functor_list .

    $default  reduce using rule 88 (arg)


State 260

   89 arg: "&" "identifier" "(" . arg ")"
   90    | "&" "identifier" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 337
    condition  go to state 109


State 261

  114 arg: arg "type cast" "identifier" .

    $default  reduce using rule 114 (arg)


State 262

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  100    | arg "+" arg .
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "*"  shift, and go to state 182
    "/"  shift, and go to state 183
    "^"  shift, and go to state 184
    "%"  shift, and go to state 185
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 100 (arg)


State 263

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  101    | arg "-" arg .
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "*"  shift, and go to state 182
    "/"  shift, and go to state 183
    "^"  shift, and go to state 184
    "%"  shift, and go to state 185
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 101 (arg)


State 264

  131 condition: arg "!" "=" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 338
    condition  go to state 109


State 265

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  130          | arg "=" arg .
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 130 (condition)


State 266

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  102    | arg "*" arg .
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "^"  shift, and go to state 184
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 102 (arg)


State 267

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  103    | arg "/" arg .
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "^"  shift, and go to state 184
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 103 (arg)


State 268

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  105    | arg "^" arg .
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "^"  shift, and go to state 184
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 105 (arg)


State 269

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  104    | arg "%" arg .
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "^"  shift, and go to state 184
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 104 (arg)


State 270

  133 condition: arg "<" "=" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 339
    condition  go to state 109


State 271

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  132          | arg "<" arg .
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 132 (condition)


State 272

  135 condition: arg ">" "=" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 340
    condition  go to state 109


State 273

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  134          | arg ">" arg .
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 134 (condition)


State 274

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   97    | arg "band" arg .
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "+"  shift, and go to state 178
    "-"  shift, and go to state 179
    "!"  shift, and go to state 180
    "="  shift, and go to state 181
    "*"  shift, and go to state 182
    "/"  shift, and go to state 183
    "^"  shift, and go to state 184
    "%"  shift, and go to state 185
    "<"  shift, and go to state 186
    ">"  shift, and go to state 187

    $default  reduce using rule 97 (arg)


State 275

   95 arg: arg . "bor" arg
   95    | arg "bor" arg .
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "+"     shift, and go to state 178
    "-"     shift, and go to state 179
    "!"     shift, and go to state 180
    "="     shift, and go to state 181
    "*"     shift, and go to state 182
    "/"     shift, and go to state 183
    "^"     shift, and go to state 184
    "%"     shift, and go to state 185
    "<"     shift, and go to state 186
    ">"     shift, and go to state 187
    "band"  shift, and go to state 188
    "bxor"  shift, and go to state 190

    $default  reduce using rule 95 (arg)


State 276

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   96    | arg "bxor" arg .
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "+"     shift, and go to state 178
    "-"     shift, and go to state 179
    "!"     shift, and go to state 180
    "="     shift, and go to state 181
    "*"     shift, and go to state 182
    "/"     shift, and go to state 183
    "^"     shift, and go to state 184
    "%"     shift, and go to state 185
    "<"     shift, and go to state 186
    ">"     shift, and go to state 187
    "band"  shift, and go to state 188

    $default  reduce using rule 96 (arg)


State 277

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
   99    | arg "land" arg .
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "+"     shift, and go to state 178
    "-"     shift, and go to state 179
    "!"     shift, and go to state 180
    "="     shift, and go to state 181
    "*"     shift, and go to state 182
    "/"     shift, and go to state 183
    "^"     shift, and go to state 184
    "%"     shift, and go to state 185
    "<"     shift, and go to state 186
    ">"     shift, and go to state 187
    "band"  shift, and go to state 188
    "bor"   shift, and go to state 189
    "bxor"  shift, and go to state 190

    $default  reduce using rule 99 (arg)


State 278

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   98    | arg "lor" arg .
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "+"     shift, and go to state 178
    "-"     shift, and go to state 179
    "!"     shift, and go to state 180
    "="     shift, and go to state 181
    "*"     shift, and go to state 182
    "/"     shift, and go to state 183
    "^"     shift, and go to state 184
    "%"     shift, and go to state 185
    "<"     shift, and go to state 186
    ">"     shift, and go to state 187
    "band"  shift, and go to state 188
    "bor"   shift, and go to state 189
    "bxor"  shift, and go to state 190
    "land"  shift, and go to state 191

    $default  reduce using rule 98 (arg)


State 279

   94 arg: condition "?" arg . ":" arg
   95    | arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ":"          shift, and go to state 341
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 280

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  143 non_empty_arg_list: arg_list "," arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 143 (non_empty_arg_list)


State 281

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  152 literal: "match predicate" "(" arg . "," arg ")"

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ","          shift, and go to state 342
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 282

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  153 literal: "checks whether substring is contained in a string" "(" arg . "," arg ")"

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ","          shift, and go to state 343
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 283

  161 term: "(" disjunction ")" .

    $default  reduce using rule 161 (term)


State 284

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  147 literal: arg "relational operator" arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 147 (literal)


State 285

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  130          | arg "=" arg .
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  150 literal: arg "=" arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    "?"       reduce using rule 130 (condition)
    $default  reduce using rule 150 (literal)


State 286

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  132          | arg "<" arg .
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  148 literal: arg "<" arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    "?"       reduce using rule 132 (condition)
    $default  reduce using rule 148 (literal)


State 287

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  134          | arg ">" arg .
  135          | arg . ">" "=" arg
  149 literal: arg ">" arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    "?"       reduce using rule 134 (condition)
    $default  reduce using rule 149 (literal)


State 288

  163 conjunction: conjunction "," term .

    $default  reduce using rule 163 (conjunction)


State 289

  163 conjunction: conjunction . "," term
  165 disjunction: disjunction ";" conjunction .

    ","  shift, and go to state 205

    $default  reduce using rule 165 (disjunction)


State 290

  169 exec_order: "(" . exec_order_list ")"

    "number"  shift, and go to state 344

    exec_order_list  go to state 345


State 291

  170 exec_plan_list: "number" ":" exec_order .

    $default  reduce using rule 170 (exec_plan_list)


State 292

  171 exec_plan_list: exec_plan_list "," "number" . ":" exec_order

    ":"  shift, and go to state 346


State 293

  197 comp_override: "override rules of super-component" "identifier" .

    $default  reduce using rule 197 (comp_override)


State 294

   20 type_id: type_id . "." "identifier"
   38 non_empty_attributes: "identifier" ":" type_id .

    "."  shift, and go to state 235

    $default  reduce using rule 38 (non_empty_attributes)


State 295

   42 qualifiers: qualifiers . "relation qualifier output"
   43           | qualifiers . "relation qualifier input"
   44           | qualifiers . "relation qualifier printsize"
   45           | qualifiers . "relation qualifier overidable"
   46           | qualifiers . "relation qualifier inline"
   47           | qualifiers . "BRIE datastructure qualifier"
   48           | qualifiers . "BTREE datastructure qualifier"
   49           | qualifiers . "equivalence relation qualifier"
   59 relation_body: "identifier" "(" attributes ")" qualifiers .

    "relation qualifier output"       shift, and go to state 347
    "relation qualifier input"        shift, and go to state 348
    "relation qualifier printsize"    shift, and go to state 349
    "BRIE datastructure qualifier"    shift, and go to state 350
    "BTREE datastructure qualifier"   shift, and go to state 351
    "equivalence relation qualifier"  shift, and go to state 352
    "relation qualifier overidable"   shift, and go to state 353
    "relation qualifier inline"       shift, and go to state 354

    $default  reduce using rule 59 (relation_body)


State 296

   39 non_empty_attributes: attributes "," "identifier" . ":" type_id

    ":"  shift, and go to state 355


State 297

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" . "symbol" "," "symbol" "," "identifier" "," "identifier" ")"

    "symbol"  shift, and go to state 356


State 298

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" . ")" ":" "identifier" "{" lattice_unary_def_type "}"
   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" . "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

    ")"  shift, and go to state 357
    ","  shift, and go to state 358


State 299

   52 functor_decl: "functor declaration" "identifier" "(" ")" ":" functor_type .

    $default  reduce using rule 52 (functor_decl)


State 300

   54 functor_typeargs: functor_type "," functor_typeargs .

    $default  reduce using rule 54 (functor_typeargs)


State 301

   51 functor_decl: "functor declaration" "identifier" "(" functor_typeargs ")" ":" . functor_type

    "identifier"  shift, and go to state 139

    functor_type  go to state 359


State 302

   68 non_empty_key_value_pairs: "identifier" "=" "symbol" .

    $default  reduce using rule 68 (non_empty_key_value_pairs)


State 303

   70 non_empty_key_value_pairs: "identifier" "=" "identifier" .

    $default  reduce using rule 70 (non_empty_key_value_pairs)


State 304

   72 non_empty_key_value_pairs: "identifier" "=" "true literal constraint" .

    $default  reduce using rule 72 (non_empty_key_value_pairs)


State 305

   74 non_empty_key_value_pairs: "identifier" "=" "false literal constraint" .

    $default  reduce using rule 74 (non_empty_key_value_pairs)


State 306

   69 non_empty_key_value_pairs: key_value_pairs "," "identifier" . "=" "symbol"
   71                          | key_value_pairs "," "identifier" . "=" "identifier"
   73                          | key_value_pairs "," "identifier" . "=" "true literal constraint"
   75                          | key_value_pairs "," "identifier" . "=" "false literal constraint"

    "="  shift, and go to state 360


State 307

   28 recordtype: "identifier" ":" . type_id

    "identifier"  shift, and go to state 147

    type_id  go to state 361


State 308

   25 type: "type declaration" "identifier" "=" "[" recordtype "]" .

    $default  reduce using rule 25 (type)


State 309

   29 recordtype: recordtype "," . "identifier" ":" type_id

    "identifier"  shift, and go to state 362


State 310

   20 type_id: type_id "." "identifier" .

    $default  reduce using rule 20 (type_id)


State 311

   20 type_id: type_id . "." "identifier"
   31 uniontype: uniontype "|" type_id .

    "."  shift, and go to state 235

    $default  reduce using rule 31 (uniontype)


State 312

   32 enumtype: "case" "symbol" .

    $default  reduce using rule 32 (enumtype)


State 313

   33 enumtype: "case" "numeric type declaration" .

    $default  reduce using rule 33 (enumtype)


State 314

   34 enumtype: enumtype "," . "case" "symbol"
   35         | enumtype "," . "case" "numeric type declaration"

    "case"  shift, and go to state 363


State 315

   27 type: "enum declaration" "identifier" "=" "{" enumtype "}" .

    $default  reduce using rule 27 (type)


State 316

   20 type_id: type_id . "." "identifier"
  178 type_param_list: type_param_list "," type_id .

    "."  shift, and go to state 235

    $default  reduce using rule 178 (type_param_list)


State 317

  129 arg: "reserved keyword" "(" arg ")" .

    $default  reduce using rule 129 (arg)


State 318

  108 arg: "concatenation of two strings" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 364
    condition  go to state 109


State 319

  109 arg: "ordinal number of a string" "(" arg ")" .

    $default  reduce using rule 109 (arg)


State 320

  110 arg: "length of a string" "(" arg ")" .

    $default  reduce using rule 110 (arg)


State 321

  113 arg: "sub-string of a string" "(" arg "," . arg "," arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 365
    condition  go to state 109


State 322

  107 arg: "min aggregator" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 366
    condition  go to state 109


State 323

  126 arg: "min aggregator" arg ":" "{" . body "}"

    "reserved keyword"                                   shift, and go to state 84
    "symbol"                                             shift, and go to state 85
    "identifier"                                         shift, and go to state 113
    "number"                                             shift, and go to state 87
    "match predicate"                                    shift, and go to state 114
    "checks whether substring is contained in a string"  shift, and go to state 115
    "concatenation of two strings"                       shift, and go to state 88
    "ordinal number of a string"                         shift, and go to state 89
    "length of a string"                                 shift, and go to state 90
    "sub-string of a string"                             shift, and go to state 91
    "min aggregator"                                     shift, and go to state 92
    "max aggregator"                                     shift, and go to state 93
    "count aggregator"                                   shift, and go to state 94
    "sum aggregator"                                     shift, and go to state 95
    "true literal constraint"                            shift, and go to state 116
    "false literal constraint"                           shift, and go to state 117
    "convert string to number"                           shift, and go to state 96
    "convert number to string"                           shift, and go to state 97
    "nil reference"                                      shift, and go to state 98
    "["                                                  shift, and go to state 99
    "_"                                                  shift, and go to state 100
    "$"                                                  shift, and go to state 101
    "-"                                                  shift, and go to state 102
    "!"                                                  shift, and go to state 118
    "("                                                  shift, and go to state 119
    "@"                                                  shift, and go to state 104
    "&"                                                  shift, and go to state 105
    "bnot"                                               shift, and go to state 106
    "lnot"                                               shift, and go to state 107

    rel_id       go to state 22
    arg          go to state 120
    condition    go to state 109
    atom         go to state 121
    literal      go to state 122
    term         go to state 123
    conjunction  go to state 124
    disjunction  go to state 125
    body         go to state 367


State 324

  125 arg: "min aggregator" arg ":" atom .

    $default  reduce using rule 125 (arg)


State 325

  106 arg: "max aggregator" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 368
    condition  go to state 109


State 326

  128 arg: "max aggregator" arg ":" "{" . body "}"

    "reserved keyword"                                   shift, and go to state 84
    "symbol"                                             shift, and go to state 85
    "identifier"                                         shift, and go to state 113
    "number"                                             shift, and go to state 87
    "match predicate"                                    shift, and go to state 114
    "checks whether substring is contained in a string"  shift, and go to state 115
    "concatenation of two strings"                       shift, and go to state 88
    "ordinal number of a string"                         shift, and go to state 89
    "length of a string"                                 shift, and go to state 90
    "sub-string of a string"                             shift, and go to state 91
    "min aggregator"                                     shift, and go to state 92
    "max aggregator"                                     shift, and go to state 93
    "count aggregator"                                   shift, and go to state 94
    "sum aggregator"                                     shift, and go to state 95
    "true literal constraint"                            shift, and go to state 116
    "false literal constraint"                           shift, and go to state 117
    "convert string to number"                           shift, and go to state 96
    "convert number to string"                           shift, and go to state 97
    "nil reference"                                      shift, and go to state 98
    "["                                                  shift, and go to state 99
    "_"                                                  shift, and go to state 100
    "$"                                                  shift, and go to state 101
    "-"                                                  shift, and go to state 102
    "!"                                                  shift, and go to state 118
    "("                                                  shift, and go to state 119
    "@"                                                  shift, and go to state 104
    "&"                                                  shift, and go to state 105
    "bnot"                                               shift, and go to state 106
    "lnot"                                               shift, and go to state 107

    rel_id       go to state 22
    arg          go to state 120
    condition    go to state 109
    atom         go to state 121
    literal      go to state 122
    term         go to state 123
    conjunction  go to state 124
    disjunction  go to state 125
    body         go to state 369


State 327

  127 arg: "max aggregator" arg ":" atom .

    $default  reduce using rule 127 (arg)


State 328

  122 arg: "count aggregator" ":" "{" body . "}"

    "}"  shift, and go to state 370


State 329

  124 arg: "sum aggregator" arg ":" "{" . body "}"

    "reserved keyword"                                   shift, and go to state 84
    "symbol"                                             shift, and go to state 85
    "identifier"                                         shift, and go to state 113
    "number"                                             shift, and go to state 87
    "match predicate"                                    shift, and go to state 114
    "checks whether substring is contained in a string"  shift, and go to state 115
    "concatenation of two strings"                       shift, and go to state 88
    "ordinal number of a string"                         shift, and go to state 89
    "length of a string"                                 shift, and go to state 90
    "sub-string of a string"                             shift, and go to state 91
    "min aggregator"                                     shift, and go to state 92
    "max aggregator"                                     shift, and go to state 93
    "count aggregator"                                   shift, and go to state 94
    "sum aggregator"                                     shift, and go to state 95
    "true literal constraint"                            shift, and go to state 116
    "false literal constraint"                           shift, and go to state 117
    "convert string to number"                           shift, and go to state 96
    "convert number to string"                           shift, and go to state 97
    "nil reference"                                      shift, and go to state 98
    "["                                                  shift, and go to state 99
    "_"                                                  shift, and go to state 100
    "$"                                                  shift, and go to state 101
    "-"                                                  shift, and go to state 102
    "!"                                                  shift, and go to state 118
    "("                                                  shift, and go to state 119
    "@"                                                  shift, and go to state 104
    "&"                                                  shift, and go to state 105
    "bnot"                                               shift, and go to state 106
    "lnot"                                               shift, and go to state 107

    rel_id       go to state 22
    arg          go to state 120
    condition    go to state 109
    atom         go to state 121
    literal      go to state 122
    term         go to state 123
    conjunction  go to state 124
    disjunction  go to state 125
    body         go to state 371


State 330

  123 arg: "sum aggregator" arg ":" atom .

    $default  reduce using rule 123 (arg)


State 331

  111 arg: "convert string to number" "(" arg ")" .

    $default  reduce using rule 111 (arg)


State 332

  112 arg: "convert number to string" "(" arg ")" .

    $default  reduce using rule 112 (arg)


State 333

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  141 recordlist: recordlist "," arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 141 (recordlist)


State 334

  136 functor_list: "(" ")" .

    $default  reduce using rule 136 (functor_list)


State 335

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  138 functor_args: arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 138 (functor_args)


State 336

  137 functor_list: "(" functor_args . ")"
  139 functor_args: functor_args . "," arg

    ")"  shift, and go to state 372
    ","  shift, and go to state 373


State 337

   89 arg: "&" "identifier" "(" arg . ")"
   90    | "&" "identifier" "(" arg . "," arg ")"
   95    | arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 374
    ","          shift, and go to state 375
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 338

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  131          | arg "!" "=" arg .
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 131 (condition)


State 339

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  133          | arg "<" "=" arg .
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 133 (condition)


State 340

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  135          | arg ">" "=" arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 135 (condition)


State 341

   94 arg: condition "?" arg ":" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 376
    condition  go to state 109


State 342

  152 literal: "match predicate" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 377
    condition  go to state 109


State 343

  153 literal: "checks whether substring is contained in a string" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 378
    condition  go to state 109


State 344

  167 exec_order_list: "number" .

    $default  reduce using rule 167 (exec_order_list)


State 345

  168 exec_order_list: exec_order_list . "," "number"
  169 exec_order: "(" exec_order_list . ")"

    ")"  shift, and go to state 379
    ","  shift, and go to state 380


State 346

  171 exec_plan_list: exec_plan_list "," "number" ":" . exec_order

    "("  shift, and go to state 290

    exec_order  go to state 381


State 347

   42 qualifiers: qualifiers "relation qualifier output" .

    $default  reduce using rule 42 (qualifiers)


State 348

   43 qualifiers: qualifiers "relation qualifier input" .

    $default  reduce using rule 43 (qualifiers)


State 349

   44 qualifiers: qualifiers "relation qualifier printsize" .

    $default  reduce using rule 44 (qualifiers)


State 350

   47 qualifiers: qualifiers "BRIE datastructure qualifier" .

    $default  reduce using rule 47 (qualifiers)


State 351

   48 qualifiers: qualifiers "BTREE datastructure qualifier" .

    $default  reduce using rule 48 (qualifiers)


State 352

   49 qualifiers: qualifiers "equivalence relation qualifier" .

    $default  reduce using rule 49 (qualifiers)


State 353

   45 qualifiers: qualifiers "relation qualifier overidable" .

    $default  reduce using rule 45 (qualifiers)


State 354

   46 qualifiers: qualifiers "relation qualifier inline" .

    $default  reduce using rule 46 (qualifiers)


State 355

   39 non_empty_attributes: attributes "," "identifier" ":" . type_id

    "identifier"  shift, and go to state 147

    type_id  go to state 382


State 356

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "symbol" . "," "symbol" "," "identifier" "," "identifier" ")"

    ","  shift, and go to state 383


State 357

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" ")" . ":" "identifier" "{" lattice_unary_def_type "}"

    ":"  shift, and go to state 384


State 358

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," . "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

    "identifier"  shift, and go to state 385


State 359

   51 functor_decl: "functor declaration" "identifier" "(" functor_typeargs ")" ":" functor_type .

    $default  reduce using rule 51 (functor_decl)


State 360

   69 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" . "symbol"
   71                          | key_value_pairs "," "identifier" "=" . "identifier"
   73                          | key_value_pairs "," "identifier" "=" . "true literal constraint"
   75                          | key_value_pairs "," "identifier" "=" . "false literal constraint"

    "symbol"                    shift, and go to state 386
    "identifier"                shift, and go to state 387
    "true literal constraint"   shift, and go to state 388
    "false literal constraint"  shift, and go to state 389


State 361

   20 type_id: type_id . "." "identifier"
   28 recordtype: "identifier" ":" type_id .

    "."  shift, and go to state 235

    $default  reduce using rule 28 (recordtype)


State 362

   29 recordtype: recordtype "," "identifier" . ":" type_id

    ":"  shift, and go to state 390


State 363

   34 enumtype: enumtype "," "case" . "symbol"
   35         | enumtype "," "case" . "numeric type declaration"

    "symbol"                    shift, and go to state 391
    "numeric type declaration"  shift, and go to state 392


State 364

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  108    | "concatenation of two strings" "(" arg "," arg . ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 393
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 365

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  113    | "sub-string of a string" "(" arg "," arg . "," arg ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ","          shift, and go to state 394
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 366

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  107    | "min aggregator" "(" arg "," arg . ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 395
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 367

  126 arg: "min aggregator" arg ":" "{" body . "}"

    "}"  shift, and go to state 396


State 368

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  106    | "max aggregator" "(" arg "," arg . ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 397
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 369

  128 arg: "max aggregator" arg ":" "{" body . "}"

    "}"  shift, and go to state 398


State 370

  122 arg: "count aggregator" ":" "{" body "}" .

    $default  reduce using rule 122 (arg)


State 371

  124 arg: "sum aggregator" arg ":" "{" body . "}"

    "}"  shift, and go to state 399


State 372

  137 functor_list: "(" functor_args ")" .

    $default  reduce using rule 137 (functor_list)


State 373

  139 functor_args: functor_args "," . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 400
    condition  go to state 109


State 374

   89 arg: "&" "identifier" "(" arg ")" .

    $default  reduce using rule 89 (arg)


State 375

   90 arg: "&" "identifier" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 401
    condition  go to state 109


State 376

   94 arg: condition "?" arg ":" arg .
   95    | arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "+"     shift, and go to state 178
    "-"     shift, and go to state 179
    "!"     shift, and go to state 180
    "="     shift, and go to state 181
    "*"     shift, and go to state 182
    "/"     shift, and go to state 183
    "^"     shift, and go to state 184
    "%"     shift, and go to state 185
    "<"     shift, and go to state 186
    ">"     shift, and go to state 187
    "band"  shift, and go to state 188
    "bor"   shift, and go to state 189
    "bxor"  shift, and go to state 190
    "land"  shift, and go to state 191
    "lor"   shift, and go to state 192

    $default  reduce using rule 94 (arg)


State 377

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  152 literal: "match predicate" "(" arg "," arg . ")"

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 402
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 378

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  153 literal: "checks whether substring is contained in a string" "(" arg "," arg . ")"

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 403
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 379

  169 exec_order: "(" exec_order_list ")" .

    $default  reduce using rule 169 (exec_order)


State 380

  168 exec_order_list: exec_order_list "," . "number"

    "number"  shift, and go to state 404


State 381

  171 exec_plan_list: exec_plan_list "," "number" ":" exec_order .

    $default  reduce using rule 171 (exec_plan_list)


State 382

   20 type_id: type_id . "." "identifier"
   39 non_empty_attributes: attributes "," "identifier" ":" type_id .

    "."  shift, and go to state 235

    $default  reduce using rule 39 (non_empty_attributes)


State 383

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "symbol" "," . "symbol" "," "identifier" "," "identifier" ")"

    "symbol"  shift, and go to state 405


State 384

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" ")" ":" . "identifier" "{" lattice_unary_def_type "}"

    "identifier"  shift, and go to state 406


State 385

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" . ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

    ":"  shift, and go to state 407


State 386

   69 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" "symbol" .

    $default  reduce using rule 69 (non_empty_key_value_pairs)


State 387

   71 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" "identifier" .

    $default  reduce using rule 71 (non_empty_key_value_pairs)


State 388

   73 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" "true literal constraint" .

    $default  reduce using rule 73 (non_empty_key_value_pairs)


State 389

   75 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" "false literal constraint" .

    $default  reduce using rule 75 (non_empty_key_value_pairs)


State 390

   29 recordtype: recordtype "," "identifier" ":" . type_id

    "identifier"  shift, and go to state 147

    type_id  go to state 408


State 391

   34 enumtype: enumtype "," "case" "symbol" .

    $default  reduce using rule 34 (enumtype)


State 392

   35 enumtype: enumtype "," "case" "numeric type declaration" .

    $default  reduce using rule 35 (enumtype)


State 393

  108 arg: "concatenation of two strings" "(" arg "," arg ")" .

    $default  reduce using rule 108 (arg)


State 394

  113 arg: "sub-string of a string" "(" arg "," arg "," . arg ")"

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 409
    condition  go to state 109


State 395

  107 arg: "min aggregator" "(" arg "," arg ")" .

    $default  reduce using rule 107 (arg)


State 396

  126 arg: "min aggregator" arg ":" "{" body "}" .

    $default  reduce using rule 126 (arg)


State 397

  106 arg: "max aggregator" "(" arg "," arg ")" .

    $default  reduce using rule 106 (arg)


State 398

  128 arg: "max aggregator" arg ":" "{" body "}" .

    $default  reduce using rule 128 (arg)


State 399

  124 arg: "sum aggregator" arg ":" "{" body "}" .

    $default  reduce using rule 124 (arg)


State 400

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg
  139 functor_args: functor_args "," arg .

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 139 (functor_args)


State 401

   90 arg: "&" "identifier" "(" arg "," arg . ")"
   95    | arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 410
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 402

  152 literal: "match predicate" "(" arg "," arg ")" .

    $default  reduce using rule 152 (literal)


State 403

  153 literal: "checks whether substring is contained in a string" "(" arg "," arg ")" .

    $default  reduce using rule 153 (literal)


State 404

  168 exec_order_list: exec_order_list "," "number" .

    $default  reduce using rule 168 (exec_order_list)


State 405

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "symbol" "," "symbol" . "," "identifier" "," "identifier" ")"

    ","  shift, and go to state 411


State 406

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" ")" ":" "identifier" . "{" lattice_unary_def_type "}"

    "{"  shift, and go to state 412


State 407

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" . "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}"

    "identifier"  shift, and go to state 413


State 408

   20 type_id: type_id . "." "identifier"
   29 recordtype: recordtype "," "identifier" ":" type_id .

    "."  shift, and go to state 235

    $default  reduce using rule 29 (recordtype)


State 409

   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  113    | "sub-string of a string" "(" arg "," arg "," arg . ")"
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 414
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 410

   90 arg: "&" "identifier" "(" arg "," arg ")" .

    $default  reduce using rule 90 (arg)


State 411

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "symbol" "," "symbol" "," . "identifier" "," "identifier" ")"

    "identifier"  shift, and go to state 415


State 412

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" ")" ":" "identifier" "{" . lattice_unary_def_type "}"

    "case"  shift, and go to state 416

    lattice_unary_def_type  go to state 417


State 413

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" . ")" ":" "identifier" "{" lattice_binary_def_type "}"

    ")"  shift, and go to state 418


State 414

  113 arg: "sub-string of a string" "(" arg "," arg "," arg ")" .

    $default  reduce using rule 113 (arg)


State 415

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "symbol" "," "symbol" "," "identifier" . "," "identifier" ")"

    ","  shift, and go to state 419


State 416

   63 lattice_unary_def_type: "case" . "(" arg ")" "=>" arg

    "("  shift, and go to state 420


State 417

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_unary_def_type . "}"
   64 lattice_unary_def_type: lattice_unary_def_type . "," "case" "(" arg ")" "=>" arg

    ","  shift, and go to state 421
    "}"  shift, and go to state 422


State 418

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" . ":" "identifier" "{" lattice_binary_def_type "}"

    ":"  shift, and go to state 423


State 419

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "symbol" "," "symbol" "," "identifier" "," . "identifier" ")"

    "identifier"  shift, and go to state 424


State 420

   63 lattice_unary_def_type: "case" "(" . arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 425
    condition  go to state 109


State 421

   64 lattice_unary_def_type: lattice_unary_def_type "," . "case" "(" arg ")" "=>" arg

    "case"  shift, and go to state 426


State 422

   62 lattice_unary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_unary_def_type "}" .

    $default  reduce using rule 62 (lattice_unary_def)


State 423

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" . "identifier" "{" lattice_binary_def_type "}"

    "identifier"  shift, and go to state 427


State 424

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "symbol" "," "symbol" "," "identifier" "," "identifier" . ")"

    ")"  shift, and go to state 428


State 425

   63 lattice_unary_def_type: "case" "(" arg . ")" "=>" arg
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 429
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 426

   64 lattice_unary_def_type: lattice_unary_def_type "," "case" . "(" arg ")" "=>" arg

    "("  shift, and go to state 430


State 427

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" . "{" lattice_binary_def_type "}"

    "{"  shift, and go to state 431


State 428

   61 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "symbol" "," "symbol" "," "identifier" "," "identifier" ")" .

    $default  reduce using rule 61 (lattice_asscoiation)


State 429

   63 lattice_unary_def_type: "case" "(" arg ")" . "=>" arg

    "=>"  shift, and go to state 432


State 430

   64 lattice_unary_def_type: lattice_unary_def_type "," "case" "(" . arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 433
    condition  go to state 109


State 431

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" . lattice_binary_def_type "}"

    "case"  shift, and go to state 434

    lattice_binary_def_type  go to state 435


State 432

   63 lattice_unary_def_type: "case" "(" arg ")" "=>" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 436
    condition  go to state 109


State 433

   64 lattice_unary_def_type: lattice_unary_def_type "," "case" "(" arg . ")" "=>" arg
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 437
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 434

   66 lattice_binary_def_type: "case" . "(" arg "," arg ")" "=>" arg

    "("  shift, and go to state 438


State 435

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type . "}"
   67 lattice_binary_def_type: lattice_binary_def_type . "," "case" "(" arg "," arg ")" "=>" arg

    ","  shift, and go to state 439
    "}"  shift, and go to state 440


State 436

   63 lattice_unary_def_type: "case" "(" arg ")" "=>" arg .
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 63 (lattice_unary_def_type)


State 437

   64 lattice_unary_def_type: lattice_unary_def_type "," "case" "(" arg ")" . "=>" arg

    "=>"  shift, and go to state 441


State 438

   66 lattice_binary_def_type: "case" "(" . arg "," arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 442
    condition  go to state 109


State 439

   67 lattice_binary_def_type: lattice_binary_def_type "," . "case" "(" arg "," arg ")" "=>" arg

    "case"  shift, and go to state 443


State 440

   65 lattice_binary_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_binary_def_type "}" .

    $default  reduce using rule 65 (lattice_binary_def)


State 441

   64 lattice_unary_def_type: lattice_unary_def_type "," "case" "(" arg ")" "=>" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 444
    condition  go to state 109


State 442

   66 lattice_binary_def_type: "case" "(" arg . "," arg ")" "=>" arg
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ","          shift, and go to state 445
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 443

   67 lattice_binary_def_type: lattice_binary_def_type "," "case" . "(" arg "," arg ")" "=>" arg

    "("  shift, and go to state 446


State 444

   64 lattice_unary_def_type: lattice_unary_def_type "," "case" "(" arg ")" "=>" arg .
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 64 (lattice_unary_def_type)


State 445

   66 lattice_binary_def_type: "case" "(" arg "," . arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 447
    condition  go to state 109


State 446

   67 lattice_binary_def_type: lattice_binary_def_type "," "case" "(" . arg "," arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 448
    condition  go to state 109


State 447

   66 lattice_binary_def_type: "case" "(" arg "," arg . ")" "=>" arg
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 449
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 448

   67 lattice_binary_def_type: lattice_binary_def_type "," "case" "(" arg . "," arg ")" "=>" arg
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ","          shift, and go to state 450
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 449

   66 lattice_binary_def_type: "case" "(" arg "," arg ")" . "=>" arg

    "=>"  shift, and go to state 451


State 450

   67 lattice_binary_def_type: lattice_binary_def_type "," "case" "(" arg "," . arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 452
    condition  go to state 109


State 451

   66 lattice_binary_def_type: "case" "(" arg "," arg ")" "=>" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 453
    condition  go to state 109


State 452

   67 lattice_binary_def_type: lattice_binary_def_type "," "case" "(" arg "," arg . ")" "=>" arg
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    ")"          shift, and go to state 454
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192


State 453

   66 lattice_binary_def_type: "case" "(" arg "," arg ")" "=>" arg .
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 66 (lattice_binary_def_type)


State 454

   67 lattice_binary_def_type: lattice_binary_def_type "," "case" "(" arg "," arg ")" . "=>" arg

    "=>"  shift, and go to state 455


State 455

   67 lattice_binary_def_type: lattice_binary_def_type "," "case" "(" arg "," arg ")" "=>" . arg

    "reserved keyword"              shift, and go to state 84
    "symbol"                        shift, and go to state 85
    "identifier"                    shift, and go to state 86
    "number"                        shift, and go to state 87
    "concatenation of two strings"  shift, and go to state 88
    "ordinal number of a string"    shift, and go to state 89
    "length of a string"            shift, and go to state 90
    "sub-string of a string"        shift, and go to state 91
    "min aggregator"                shift, and go to state 92
    "max aggregator"                shift, and go to state 93
    "count aggregator"              shift, and go to state 94
    "sum aggregator"                shift, and go to state 95
    "convert string to number"      shift, and go to state 96
    "convert number to string"      shift, and go to state 97
    "nil reference"                 shift, and go to state 98
    "["                             shift, and go to state 99
    "_"                             shift, and go to state 100
    "$"                             shift, and go to state 101
    "-"                             shift, and go to state 102
    "("                             shift, and go to state 103
    "@"                             shift, and go to state 104
    "&"                             shift, and go to state 105
    "bnot"                          shift, and go to state 106
    "lnot"                          shift, and go to state 107

    arg        go to state 456
    condition  go to state 109


State 456

   67 lattice_binary_def_type: lattice_binary_def_type "," "case" "(" arg "," arg ")" "=>" arg .
   95 arg: arg . "bor" arg
   96    | arg . "bxor" arg
   97    | arg . "band" arg
   98    | arg . "lor" arg
   99    | arg . "land" arg
  100    | arg . "+" arg
  101    | arg . "-" arg
  102    | arg . "*" arg
  103    | arg . "/" arg
  104    | arg . "%" arg
  105    | arg . "^" arg
  114    | arg . "type cast" "identifier"
  130 condition: arg . "=" arg
  131          | arg . "!" "=" arg
  132          | arg . "<" arg
  133          | arg . "<" "=" arg
  134          | arg . ">" arg
  135          | arg . ">" "=" arg

    "type cast"  shift, and go to state 177
    "+"          shift, and go to state 178
    "-"          shift, and go to state 179
    "!"          shift, and go to state 180
    "="          shift, and go to state 181
    "*"          shift, and go to state 182
    "/"          shift, and go to state 183
    "^"          shift, and go to state 184
    "%"          shift, and go to state 185
    "<"          shift, and go to state 186
    ">"          shift, and go to state 187
    "band"       shift, and go to state 188
    "bor"        shift, and go to state 189
    "bxor"       shift, and go to state 190
    "land"       shift, and go to state 191
    "lor"        shift, and go to state 192

    $default  reduce using rule 67 (lattice_binary_def_type)
